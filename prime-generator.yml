--- 
- name: Deploy prime-generator app for testing 
  hosts: localhost 
  connection: local 
  
  module_defaults:
    redhat.openshift.openshift_auth:
      host: "{{ xtra_openshift_api }}"
      validate_certs: false # for demo env (self signed certs)

  vars:
    openshift_admin_password: "{{ xtra_openshift_admin_password }}"
    openshift_admin_username: "{{ xtra_openshift_admin_username }}"

  tasks:

    - name: Authenticate to OpenShift cluster and deploy application
      block:
        - name: Log in (obtain access token)
          redhat.openshift.openshift_auth:
            username: "{{ openshift_admin_username }}"
            password: "{{ openshift_admin_password }}"
          register: openshift_auth_results

        - name: Create the app namespace 
          kubernetes.core.k8s:
            name: prime-generator
            api_version: v1
            kind: Namespace
            state: present

        - name: Deploy Prime Generator as a serverless app 
          kubernetes.core.k8s:
            state: present
            definition:
              apiVersion: serving.knative.dev/v1
              kind: Service
              metadata:
                name: prime-generator 
                namespace: prime-generator
              spec:
                template: 
                  spec: 
                    containers:
                      - image: quay.io/rhdevelopers/prime-generator:v27-quarkus          

        - name: Get app URL 
          kubernetes.core.k8s_info: 
            api_version: "serving.knative.dev/v1" 
            kind: Service 
            name: prime-generator
            namespace: prime-generator 
          register: k8s_services 

        - name: Test that prime-generator is running 
          ansible.builtin.uri:
            url: "{{ k8s_services.resources[0].status.url }}?sleep=3&upto=10000&memload=100"
            return_content: yes 
          register: response 

      always:
        - name: If login succeeded, try to log out (revoke access token)
          when: openshift_auth_results.openshift_auth.api_key is defined
          redhat.openshift.openshift_auth:
            state: absent
            api_key: "{{ openshift_auth_results.openshift_auth.api_key }}"